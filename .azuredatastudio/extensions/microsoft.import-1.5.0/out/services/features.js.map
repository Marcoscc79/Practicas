{"version":3,"file":"features.js","sourceRoot":"../../src","sources":["services/features.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SqlOpsDataClient, SqlOpsFeature } from 'dataprotocol-client';\nimport {\n\tClientCapabilities,\n\tStaticFeature,\n\tRPCMessageType,\n\tServerCapabilities,\n\tRequestType\n} from 'vscode-languageclient';\nimport * as UUID from 'vscode-languageclient/lib/utils/uuid';\nimport { Disposable } from 'vscode';\n\nimport { Telemetry } from './telemetry';\nimport * as serviceUtils from './serviceUtils';\nimport * as Contracts from './contracts';\nimport { managerInstance, ApiType } from './serviceApiManager';\n\nexport class TelemetryFeature implements StaticFeature {\n\n\tconstructor(private _client: SqlOpsDataClient) {\n\t}\n\n\tfillClientCapabilities(capabilities: ClientCapabilities): void {\n\t\tserviceUtils.ensure(capabilities, 'telemetry')!.telemetry = true;\n\t}\n\n\tinitialize(): void {\n\t\tthis._client.onNotification(Contracts.TelemetryNotification.type, e => {\n\t\t\tTelemetry.sendTelemetryEvent(e.params.eventName, e.params.properties, e.params.measures);\n\t\t});\n\t}\n}\n\nexport class FlatFileImportFeature extends SqlOpsFeature<undefined> {\n\tprivate static readonly messagesTypes: RPCMessageType[] = [\n\t\tContracts.PROSEDiscoveryRequest.type\n\t];\n\n\tconstructor(client: SqlOpsDataClient) {\n\t\tsuper(client, FlatFileImportFeature.messagesTypes);\n\t}\n\n\tpublic fillClientCapabilities(capabilities: ClientCapabilities): void {\n\t}\n\n\tpublic initialize(capabilities: ServerCapabilities): void {\n\t\tthis.register(this.messages, {\n\t\t\tid: UUID.generateUuid(),\n\t\t\tregisterOptions: undefined\n\t\t});\n\t}\n\n\tprotected registerProvider(options: undefined): Disposable {\n\t\tconst client = this._client;\n\n\t\tlet requestSender = (requestType: RequestType<any, any, void, void>, params: any) => {\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\treturn r as any;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet sendPROSEDiscoveryRequest = (params: Contracts.PROSEDiscoveryParams): Thenable<Contracts.PROSEDiscoveryResponse> => {\n\t\t\treturn requestSender(Contracts.PROSEDiscoveryRequest.type, params);\n\t\t};\n\n\t\tlet sendInsertDataRequest = (params: Contracts.InsertDataParams): Thenable<Contracts.InsertDataResponse> => {\n\t\t\treturn requestSender(Contracts.InsertDataRequest.type, params);\n\t\t};\n\n\t\tlet sendGetColumnInfoRequest = (params: Contracts.GetColumnInfoParams): Thenable<Contracts.GetColumnInfoResponse> => {\n\t\t\treturn requestSender(Contracts.GetColumnInfoRequest.type, params);\n\t\t};\n\n\t\tlet sendChangeColumnSettingsRequest = (params: Contracts.ChangeColumnSettingsParams): Thenable<Contracts.ChangeColumnSettingsResponse> => {\n\t\t\treturn requestSender(Contracts.ChangeColumnSettingsRequest.type, params);\n\t\t};\n\n\t\tlet sendLearnTransformationRequest = (params: Contracts.LearnTransformationParams): Thenable<Contracts.LearnTransformationResponse> => {\n\t\t\treturn requestSender(Contracts.LearnTransformationRequest.type, params);\n\t\t};\n\n\t\tlet sendSaveTransformationRequest = (params: Contracts.SaveTransformationParams): Thenable<Contracts.SaveTransformationResponse> => {\n\t\t\treturn requestSender(Contracts.SaveTransformationRequest.type, params);\n\t\t};\n\n\t\treturn managerInstance.registerApi<Contracts.FlatFileProvider>(ApiType.FlatFileProvider, {\n\t\t\tproviderId: client.providerId,\n\t\t\tsendPROSEDiscoveryRequest,\n\t\t\tsendChangeColumnSettingsRequest,\n\t\t\tsendGetColumnInfoRequest,\n\t\t\tsendInsertDataRequest,\n\t\t\tsendLearnTransformationRequest,\n\t\t\tsendSaveTransformationRequest\n\t\t});\n\t}\n}\n"]}