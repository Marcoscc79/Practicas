{"version":3,"file":"modifyColumnsPage.test.js","sourceRoot":"../../../../src","sources":["test/wizard/pages/modifyColumnsPage.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as TypeMoq from 'typemoq';\nimport * as azdata from 'azdata';\nimport * as constants from '../../../common/constants';\nimport { FlatFileWizard } from '../../../wizard/flatFileWizard';\nimport * as should from 'should';\nimport { ModifyColumnsPage } from '../../../wizard/pages/modifyColumnsPage';\nimport { ImportDataModel } from '../../../wizard/api/models';\nimport { TestImportDataModel, TestFlatFileProvider } from '../../utils.test';\nimport { ImportPage } from '../../../wizard/api/importPage';\nimport { FlatFileProvider } from '../../../services/contracts';\n\ndescribe('import extension modify Column Page', function () {\n\tlet wizard: azdata.window.Wizard;\n\tlet page: azdata.window.WizardPage;\n\tlet modifyColumnsPage: ModifyColumnsPage;\n\tlet mockFlatFileWizard: TypeMoq.IMock<FlatFileWizard>;\n\tlet mockImportModel: TypeMoq.IMock<ImportDataModel>;\n\tlet pages: Map<number, ImportPage> = new Map<number, ImportPage>();\n\tlet mockFlatFileProvider: TypeMoq.IMock<FlatFileProvider>;\n\n\tbeforeEach(function () {\n\n\t\tmockFlatFileProvider = TypeMoq.Mock.ofType(TestFlatFileProvider);\n\t\tmockFlatFileWizard = TypeMoq.Mock.ofType(FlatFileWizard, TypeMoq.MockBehavior.Loose, undefined, mockFlatFileProvider.object);\n\t\tmockImportModel = TypeMoq.Mock.ofType(TestImportDataModel, TypeMoq.MockBehavior.Loose);\n\n\t\twizard = azdata.window.createWizard(constants.wizardNameText);\n\t\tpage = azdata.window.createWizardPage(constants.page3NameText);\n\n\t});\n\n\tit('checking if all components are initialized properly', async function () {\n\n\t\tawait new Promise<void>(function (resolve) {\n\t\t\tpage.registerContent(async (view) => {\n\t\t\t\tmodifyColumnsPage = new ModifyColumnsPage(mockFlatFileWizard.object, page, mockImportModel.object, view, TypeMoq.It.isAny());\n\t\t\t\tpages.set(1, modifyColumnsPage);\n\t\t\t\tawait modifyColumnsPage.start();\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\twizard.generateScriptButton.hidden = true;\n\n\t\t\twizard.pages = [page];\n\t\t\twizard.open();\n\t\t});\n\n\t\t// checking if all the components are initialized properly\n\t\tshould.notEqual(modifyColumnsPage.table, undefined, 'table should not be undefined');\n\t\tshould.notEqual(modifyColumnsPage.text, undefined, 'text should not be undefined');\n\t\tshould.notEqual(modifyColumnsPage.loading, undefined, 'loading should not be undefined');\n\t\tshould.notEqual(modifyColumnsPage.form, undefined, 'form should not be undefined');\n\t});\n\n\tit('handleImport updates table value correctly when import is successful', async function() {\n\n\n\t\tlet testProseColumns = [\n\t\t\t{\n\t\t\t\tcolumnName: 'column1',\n\t\t\t\tdataType: 'nvarchar(50)',\n\t\t\t\tprimaryKey: false,\n\t\t\t\tnullable: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumnName: 'column2',\n\t\t\t\tdataType: 'nvarchar(50)',\n\t\t\t\tprimaryKey: false,\n\t\t\t\tnullable: false\n\t\t\t}\n\t\t];\n\n\t\tlet testTableData = [\n\t\t\t[ 'column1', 'nvarchar(50)', false, false],\n\t\t\t[ 'column2', 'nvarchar(50)', false, false]\n\t\t];\n\n\t\tmockImportModel.object.proseColumns = testProseColumns;\n\n\t\tawait new Promise<void>(function (resolve) {\n\t\t\tpage.registerContent(async (view) => {\n\t\t\t\tmodifyColumnsPage = new ModifyColumnsPage(mockFlatFileWizard.object, page, mockImportModel.object, view, TypeMoq.It.isAny());\n\t\t\t\tpages.set(1, modifyColumnsPage);\n\t\t\t\tawait modifyColumnsPage.start();\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\twizard.generateScriptButton.hidden = true;\n\n\t\t\twizard.pages = [page];\n\t\t\twizard.open();\n\t\t});\n\n\n\t\tawait modifyColumnsPage.onPageEnter();\n\n\t\t// checking if all the required components are correctly initialized\n\t\tshould.deepEqual(modifyColumnsPage.table.data, testTableData);\n\n\t});\n});\n"]}