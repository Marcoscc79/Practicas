{"version":3,"file":"prosePreviewPage.test.js","sourceRoot":"../../../../src","sources":["test/wizard/pages/prosePreviewPage.test.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,mCAAmC;AACnC,iCAAiC;AACjC,uDAAuD;AACvD,mEAAgE;AAChE,iCAAiC;AAEjC,iDAAuD;AAEvD,6EAA0E;AAC1E,QAAQ,CAAC,sCAAsC,EAAE;IAEhD,2BAA2B;IAC3B,IAAI,kBAAiD,CAAC;IACtD,IAAI,eAA+C,CAAC;IAEpD,+BAA+B;IAC/B,IAAI,MAA4B,CAAC;IACjC,IAAI,IAA8B,CAAC;IACnC,IAAI,KAAK,GAA4B,IAAI,GAAG,EAAsB,CAAC;IACnE,IAAI,gBAAkC,CAAC;IAGvC,UAAU,CAAC,KAAK;QAEf,8BAA8B;QAC9B,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,+BAAc,EAAE,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;QACpH,eAAe,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,gCAAmB,EAAE,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEvF,yEAAyE;QACzE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IAEhE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK;QAE9D,mEAAmE;QACnE,MAAM,IAAI,OAAO,CAAO,UAAU,OAAO;YACxC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBACnC,gBAAgB,GAAG,IAAI,mCAAgB,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC3H,kBAAkB,CAAC,MAAM,CAAC,yBAAyB,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gBAC/F,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;gBAC/B,MAAM,gBAAgB,CAAC,KAAK,EAAE,CAAC;gBAC/B,gBAAgB,CAAC,wBAAwB,EAAE,CAAC;gBAC5C,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,oBAAoB,CAAC,MAAM,GAAG,IAAI,CAAC;YAC1C,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,oEAAoE;QACpE,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,SAAS,EAAE,+BAA+B,CAAC,CAAC;QACpF,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,EAAE,iCAAiC,CAAC,CAAC;QACxF,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE,8BAA8B,CAAC,CAAC;QAClF,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,SAAS,EAAE,6CAA6C,CAAC,CAAC;QAEhH,4BAA4B;QAC5B,MAAM,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,gBAAgB,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as TypeMoq from 'typemoq';\nimport * as azdata from 'azdata';\nimport * as constants from '../../../common/constants';\nimport { FlatFileWizard } from '../../../wizard/flatFileWizard';\nimport * as should from 'should';\nimport { ImportDataModel } from '../../../wizard/api/models';\nimport { TestImportDataModel } from '../../utils.test';\nimport { ImportPage } from '../../../wizard/api/importPage';\nimport { ProsePreviewPage } from '../../../wizard/pages/prosePreviewPage';\ndescribe('import extension prose preview tests', function () {\n\n\t// declaring mock variables\n\tlet mockFlatFileWizard: TypeMoq.IMock<FlatFileWizard>;\n\tlet mockImportModel: TypeMoq.IMock<ImportDataModel>;\n\n\t// declaring instance variables\n\tlet wizard: azdata.window.Wizard;\n\tlet page: azdata.window.WizardPage;\n\tlet pages: Map<number, ImportPage> = new Map<number, ImportPage>();\n\tlet prosePreviewPage: ProsePreviewPage;\n\n\n\tbeforeEach(async function () {\n\n\t\t// initializing mock variables\n\t\tmockFlatFileWizard = TypeMoq.Mock.ofType(FlatFileWizard, TypeMoq.MockBehavior.Loose, undefined, TypeMoq.It.isAny());\n\t\tmockImportModel = TypeMoq.Mock.ofType(TestImportDataModel, TypeMoq.MockBehavior.Loose);\n\n\t\t// creating a wizard and adding page that will contain the fileConfigPage\n\t\twizard = azdata.window.createWizard(constants.wizardNameText);\n\t\tpage = azdata.window.createWizardPage(constants.page2NameText);\n\n\t});\n\n\tit('checking if all components are initialized properly', async function () {\n\n\t\t// Opening the wizard and initializing the page as ProsePreviewPage\n\t\tawait new Promise<void>(function (resolve) {\n\t\t\tpage.registerContent(async (view) => {\n\t\t\t\tprosePreviewPage = new ProsePreviewPage(mockFlatFileWizard.object, page, mockImportModel.object, view, TypeMoq.It.isAny());\n\t\t\t\tmockFlatFileWizard.object.createDerivedColumnButton = azdata.window.createButton('TestButton');\n\t\t\t\tpages.set(1, prosePreviewPage);\n\t\t\t\tawait prosePreviewPage.start();\n\t\t\t\tprosePreviewPage.setupNavigationValidator();\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\twizard.generateScriptButton.hidden = true;\n\t\t\twizard.pages = [page];\n\t\t\twizard.open();\n\t\t});\n\n\t\t// checking if all the required components are correctly initialized\n\t\tshould.notEqual(prosePreviewPage.table, undefined, 'table should not be undefined');\n\t\tshould.notEqual(prosePreviewPage.loading, undefined, 'loading should not be undefined');\n\t\tshould.notEqual(prosePreviewPage.form, undefined, 'form should not be undefined');\n\t\tshould.notEqual(prosePreviewPage.resultTextComponent, undefined, 'resultTextComponent should not be undefined');\n\n\t\t// calling the clean up code\n\t\tawait prosePreviewPage.onPageLeave();\n\t\tawait prosePreviewPage.cleanup();\n\t});\n});\n"]}